h1. accessifyhtml5.js

This should probably go into modernizr or something, so see it just as a prototype. It depends on jQuery and was quickly hacked together. Please suggest improvements to @yatil.

It adds ARIA to new elements in browsers which don’t do it by themselves.

Just drop into the bottom of your web page:
<script src="accessifyhtml5.js"></script>

Souce: http://www.html5accessibility.com/index-aria.html

h2. How to use it (CDN version):

@<script src="//cdn.yatil.net/accessifyhtml5.min.js"></script>
<script>AccessifyHTML5();</script>@

Or if you use jQuery:

@<script src="//cdn.yatil.net/accessifyhtml5.jquery.min.js"></script>
<script>AccessifyHTML5();</script>@

h2. New in this version:

* Added non-jQuery version (Using querySelector, adds support in IE8+, FF3.5+, Opera 10+, Safari, Chrome as well as iOS, Android and Opera Mobile)
* Removed header.site getting role banner and footer.site getting role contentinfo -> If you need to add a class, you can also add the role directly to the HTML
* Thanks to @adickson you can just add selectors for banner and contentinfo when calling the function
* You’ll now have to call AccessifyHTML5-function like that: @AccessifyHTML5({header:"#header", footer:"#footer"});@

h2. Acknowledgements:

* @adickson for a really good non-jquery solution
* @stevefaulkner for his work exploring html5 a11y
* @paddya91 for object notation
* @ginader for reporting typo
* @webaxe for reporting an error
* @divya for keeping me on track for a non-jQuery solution
* @mathias for improving my javascript

h2. Known Issues:

According to @jkiss, Window-Eyes 7.11 struggles with aria-roles and HTML5, this is nothing I can solve with this script but is a screen reader issue. See: http://ya.tl/aNH1YQ

This is Open Source and free to use. Attribution is nice to see, but no must. Just use it.